{"version":3,"sources":["App.js","index.js"],"names":["App","url","useState","amount","setAmount","useEffect","fetch","then","res","json","data","className","id","method","action","onSubmit","e","preventDefault","form","document","getElementById","input","body","JSON","stringify","name","value","headers","reset","required","placeholder","type","ReactDOM","render","StrictMode"],"mappings":"kNAiEeA,MA7Cf,WACI,IAAMC,EAAM,iCADD,EAGiBC,mBAAS,GAH1B,mBAGJC,EAHI,KAGIC,EAHJ,KA+BX,OA1BAC,qBAAU,WACNC,MAAML,GACDM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIN,EAAUM,EAAKP,aAClC,IAuBC,sBAAKQ,UAAU,UAAf,UACI,oBAAIA,UAAU,QAAd,iIACA,oBAAGA,UAAU,SAAb,6KACmCR,KAEnC,uBAAMS,GAAG,eAAeC,OAAO,OAAOC,OAAQb,EAAKc,SA1B3D,SAAoBC,GAChBA,EAAEC,iBACF,IAAMC,EAAOC,SAASC,eAAe,gBAC/BC,EAAQF,SAASC,eAAe,iBACtCd,MAAML,EAAK,CACPY,OAAQ,OACRS,KAAMC,KAAKC,UAAU,CACjBC,KAAMJ,EAAMK,QAEhBC,QAAS,CACL,eAAgB,sBAGnBpB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFQ,EAAKU,QACLxB,EAAUM,EAAKP,YAUnB,UACI,uBAAOS,GAAG,gBAAgBiB,UAAQ,EAAClB,UAAU,UAAUc,KAAK,OAAOK,YAAY,wEAC/E,wBAAQnB,UAAU,UAAUoB,KAAK,SAAjC,qECtDhBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFf,SAASC,eAAe,U","file":"static/js/main.f05a174a.chunk.js","sourcesContent":["/*\n1 Сверстать страницу веб-сайта:\n- Содержимое страницы находится в контейнере и имеет отступы от границ экрана.\n- Вверху страницы по центру заголовок \"Посещаемость занятий\"\n- Под заголовком текст \"Всего студентов присутствует: N\", где N – количество отметившихся человек.\n- Под текстом форма из одного поля ввода имени и кнопки \"Добавить\".\n2 На сервере реализовать хранение посещения студентов и обработку формы:\n- Список добавленных студентов можно хранить как угодно: БД, файл, переменная в\nприложении.\n- Обработчик формы добавляет студента в список посещаемости только, если его там\nещё не было (не хранить дубликаты!), и возвращает количество студентов.\n3 Реализовать работу формы по AJAX: при заполнении (сабмите) формы на сервере\nсохраняется запись о новом студенте, поле ввода имени отчищается, а счётчик обновляется в\nсоответствии с актуальным значением.\n*/\n\nimport { useState, useEffect } from 'react';\n\nimport './App.css';\n\nfunction App() {\n    const url = \"http://localhost:5000/attendee\";\n\n    const [amount, setAmount] = useState(0);\n\n    useEffect(() => {\n        fetch(url)\n            .then(res => res.json())\n            .then(data => setAmount(data.amount));\n    }, []);\n\n    function submitForm(e) {\n        e.preventDefault();\n        const form = document.getElementById('add-attendee');\n        const input = document.getElementById('attendee-name');\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({\n                name: input.value\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                form.reset();\n                setAmount(data.amount);\n            });\n    }\n\n    return (\n        <div className=\"wrapper\">\n            <h1 className=\"title\">Посещаемость занятий</h1>\n            <p className=\"amount\">\n                Всего студентов присутствует: {amount}\n            </p>\n            <form id=\"add-attendee\" method=\"POST\" action={url} onSubmit={submitForm}>\n                <input id=\"attendee-name\" required className=\"control\" name=\"name\" placeholder=\"Имя студента\" />\n                <button className=\"control\" type=\"submit\">Добавить</button>\n            </form>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}